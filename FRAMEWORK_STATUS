KDE Core:
Sonnet Core -> Done (cullmann, moved to tier2/sonnet/core)
Archive & Compression -> Done ([nef])
KAuth
Date/Time
Translation
Service Solution
KDBus -> WIP (ervin)
Standard Locations
SSL
Mime Types
LibKCore
KDebug
Filesystem Handling
Configuration
Misc KDE Look/Feel/Consistency
Misc Integration
Locale

KDE UI:
WindowManagement
Sonnet UI -> tricky, as KTextEdit uses sonnet in kdeui and therefore you have circular dependency of sonnetui + kdeui
KJobs Widgets
Proxy Models -> Done (steveire)
Item View Widgets
XML GUI
Colors (part of kgui)
Color Widgets -> WIP (ben2367)
KConfig GUI
Misc Dialog Stuff
Plotting -> Done (ben2367)
Misc Widgets

KIO:

Sonnet:
Done -> (cullmann, moved to tier2/sonnet, as plugins) 

klauncher/ktoolinvocation:
 - KLauncher does startup notification, .desktop, and showing
  an error to the user if the application couldn't start.
  This is all in a separate process only to benefit from kdeinit.
 => remove klauncher, and use the KRun code (which uses QProcess and monitors)
  * showing errors to the user => done by KRun (see KProcessRunner)
  * startup notification       => done by KRun
 A) if we keep kdeinit, we only need to keep kdeinitExec in klauncher
 B) otherwise, we can make klauncher specific to kioslaves

To be done later when porting to frameworks:
Remove kinterprocesslock from the trash kioslave (KDBusInterProcessLock replaces it).

For more information:
 http://permalink.gmane.org/gmane.comp.kde.devel.core/70395
 http://files.kde.org/sprints/platform11/kde-frameworks-dependencies-plan.pdf
 https://spreadsheets.google.com/spreadsheet/ccc?key=0AhQ1BhQL6D9wdGpvOHN0N0xRZVBGU1c3ZmdiaXZORUE&hl=en_US&authkey=CKTcjdgP#gid=2

