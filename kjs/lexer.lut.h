/* Automatically generated from keywords.table using ./create_hash_table. DO NOT EDIT ! */

#include "lookup.h"

using namespace KJS;

namespace KJS {

const struct HashEntry mainTableEntries[] = {
   { "instanceof", INSTANCEOF, 0, 0, &mainTableEntries[63] },
   { "var", VAR, 0, 0, &mainTableEntries[47] },
   { "case", CASE, 0, 0, &mainTableEntries[41] },
   { "default", DEFAULT, 0, 0, &mainTableEntries[54] },
   { "while", WHILE, 0, 0, &mainTableEntries[46] },
   { 0, 0, 0, 0, 0 },
   { "do", DO, 0, 0, 0 },
   { "typeof", TYPEOF, 0, 0, 0 },
   { "continue", CONTINUE, 0, 0, 0 },
   { "function", FUNCTION, 0, 0, 0 },
   { "in", IN, 0, 0, 0 },
   { "import", RESERVED, 0, 0, 0 },
   { "delete", DELETE, 0, 0, 0 },
   { "finally", FINALLY, 0, 0, 0 },
   { 0, 0, 0, 0, 0 },
   { "else", ELSE, 0, 0, 0 },
   { "return", RETURN, 0, 0, 0 },
   { "debugger", RESERVED, 0, 0, 0 },
   { "const", RESERVED, 0, 0, &mainTableEntries[48] },
   { "package", RESERVED, 0, 0, 0 },
   { "double", RESERVED, 0, 0, &mainTableEntries[53] },
   { 0, 0, 0, 0, 0 },
   { "long", RESERVED, 0, 0, 0 },
   { "catch", CATCH, 0, 0, &mainTableEntries[45] },
   { "void", VOID, 0, 0, &mainTableEntries[59] },
   { "break", BREAK, 0, 0, &mainTableEntries[49] },
   { "byte", RESERVED, 0, 0, &mainTableEntries[62] },
   { "enum", RESERVED, 0, 0, &mainTableEntries[58] },
   { 0, 0, 0, 0, 0 },
   { 0, 0, 0, 0, 0 },
   { "this", THIS, 0, 0, &mainTableEntries[50] },
   { "false", FALSETOKEN, 0, 0, &mainTableEntries[44] },
   { "abstract", RESERVED, 0, 0, &mainTableEntries[56] },
   { "null", NULLTOKEN, 0, 0, &mainTableEntries[61] },
   { "with", WITH, 0, 0, 0 },
   { 0, 0, 0, 0, 0 },
   { 0, 0, 0, 0, 0 },
   { 0, 0, 0, 0, 0 },
   { "true", TRUETOKEN, 0, 0, 0 },
   { "boolean", RESERVED, 0, 0, 0 },
   { "for", FOR, 0, 0, 0 },
   { "new", NEW, 0, 0, &mainTableEntries[42] },
   { "if", IF, 0, 0, &mainTableEntries[43] },
   { "switch", SWITCH, 0, 0, &mainTableEntries[55] },
   { "throw", THROW, 0, 0, &mainTableEntries[52] },
   { "try", TRY, 0, 0, &mainTableEntries[64] },
   { "char", RESERVED, 0, 0, 0 },
   { "class", RESERVED, 0, 0, &mainTableEntries[51] },
   { "export", RESERVED, 0, 0, 0 },
   { "extends", RESERVED, 0, 0, &mainTableEntries[57] },
   { "final", RESERVED, 0, 0, 0 },
   { "float", RESERVED, 0, 0, 0 },
   { "goto", RESERVED, 0, 0, 0 },
   { "implements", RESERVED, 0, 0, 0 },
   { "int", RESERVED, 0, 0, &mainTableEntries[66] },
   { "interface", RESERVED, 0, 0, 0 },
   { "native", RESERVED, 0, 0, 0 },
   { "private", RESERVED, 0, 0, 0 },
   { "protected", RESERVED, 0, 0, &mainTableEntries[60] },
   { "public", RESERVED, 0, 0, 0 },
   { "short", RESERVED, 0, 0, 0 },
   { "static", RESERVED, 0, 0, 0 },
   { "super", RESERVED, 0, 0, 0 },
   { "synchronized", RESERVED, 0, 0, &mainTableEntries[65] },
   { "throws", RESERVED, 0, 0, 0 },
   { "transient", RESERVED, 0, 0, 0 },
   { "volatile", RESERVED, 0, 0, 0 }
};

const struct HashTable mainTable = { 2, 67, mainTableEntries, 41 };

} // namespace
