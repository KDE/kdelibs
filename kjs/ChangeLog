2002-06-08  Harri Porten  <porten@kde.org>

	* string_object.cpp: fixed the leaks introduced by the previous
	fixes of match() and split(). One has to clean up after each
	call to RegExp::match().
	* added some KJS_DEBUG_MEM ifdef'ed globalClear() functions
	that clear up static allocations. Makes debugging memory
	leaks easier as we're down to 0 "still reachable" leaks (apart
	from STL related issue in the node leak check list).

2002-06-02  Harri Porten  <porten@kde.org>

	* math_object.cpp: fixed handling of NaN in Math.round()

2002-06-01  Harri Porten  <porten@kde.org>

	* string_object.cpp: correct global flag use in match(). Fixed
	some split() cases. Fixed unlikely leak.
	* regexp_object.cpp: set 'index' and 'input' properties of
	RegExp.prototype.exec() and String.prototype.match() result.
	Made new RegExp() really produce an empty regexp.
	* array_object.cpp: correct sorting for 'undefined' properties

2001-01-04  Harri Porten  <harri@trolltech.com>

	* ustring.h: pack bytes to avoid alignment problems (ARM) reported
	by Stefan Hanske <sh990154@mail.uni-greifswald.de>
	* nodes.cpp: typeof fix by Emmeran Seehuber <the_emmy@gmx.de>
	* nodes.cpp: fixed order of function declaration proccessing

2000-12-18  Harri Porten  <harri@trolltech.com>

	* string_object.cpp: fixed out-of-bounds error in fromCharCode()

2000-12-11  Harri Porten  <harri@trolltech.com>

	* regexp.h: compile fix for buggy libc
	* ustring.cpp: format string conversion of numbers with %g

2000-12-10  Harri Porten  <harri@trolltech.com>

	* lexer.cpp: parsing != was broken, added \v escape in strings,
		fixed "\u" and "\x" and \x with non hex chars following.
	* nodes.cpp: implemented <<=, >>=, >>>=, &=, ^=, |= and %=
	* internal.cpp: create error message including line no on parse errors


