# Magic data for KMimeMagic (originally for file(1) command)
#
# The format is 4-5 columns:
#    Column #1: byte number to begin checking from, ">" indicates continuation
#    Column #2: type of data to match
#    Column #3: contents of data to match
#    Column #4: MIME type of result

#------------------------------------------------------------------------------
# Localstuff:  file(1) magic for locally observed files
# Add any locally observed files here.

#------------------------------------------------------------------------------
# end local stuff
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# audio:  file(1) magic for sound formats
#
# from Jan Nicolai Langfeldt <janl@ifi.uio.no>,
#

# Sun/NeXT audio data
0	string		.snd
>12	belong		1		audio/basic
>12	belong		2		audio/basic
>12	belong		3		audio/basic
>12	belong		4		audio/basic
>12	belong		5		audio/basic
>12	belong		6		audio/basic
>12	belong		7		audio/basic

>12	belong		23		audio/x-adpcm

# DEC systems (e.g. DECstation 5000) use a variant of the Sun/NeXT format
# that uses little-endian encoding and has a different magic number
# (0x0064732E in little-endian encoding).
0	lelong		0x0064732E	
>12	lelong		1		audio/x-dec-basic
>12	lelong		2		audio/x-dec-basic
>12	lelong		3		audio/x-dec-basic
>12	lelong		4		audio/x-dec-basic
>12	lelong		5		audio/x-dec-basic
>12	lelong		6		audio/x-dec-basic
>12	lelong		7		audio/x-dec-basic
#                                       compressed (G.721 ADPCM)
>12	lelong		23		audio/x-dec-adpcm

# Bytes 0-3 of AIFF, AIFF-C, & 8SVX audio files are "FORM"
#					AIFF audio data
8	string		AIFF		audio/x-aiff	
#					AIFF-C audio data
8	string		AIFC		audio/x-aiff	
#					IFF/8SVX audio data
8	string		8SVX		audio/x-aiff	

# MIDI
0       string		MThd            audio/x-midi
# Creative Labs AUDIO stuff
#					Standard MIDI data
0	string	MThd			audio/unknown	
#					Creative Music (CMF) data
0	string	CTMF			audio/unknown	
#					SoundBlaster instrument data
0	string	SBI			audio/unknown	
#					Creative Labs voice data
0	string	Creative\ Voice\ File	audio/unknown	
## is this next line right?  it came this way...
#>19	byte	0x1A

# [GRR 950115:  is this also Creative Labs?  Guessing that first line
#  should be string instead of unknown-endian long...]
#0	long		0x4e54524b	MultiTrack sound data
#0	string		NTRK		MultiTrack sound data

# Microsoft WAVE format (*.wav)
# [GRR 950115:  probably all of the shorts and longs should be leshort/lelong]
#					Microsoft RIFF
0	string		RIFF		audio/unknown	
#					- WAVE format
>8	string		WAVE		audio/x-wav	
# AVI                                   - AVI format
>8	string		AVI\ 		video/x-msvideo
#
0	belong		0x2e7261fd	application/x-pn-realaudio

# MPEG Layer 3 sound files
# Modified the 11/20/97 at 15:59:04 by Christophe Prud'homme <christophe.prudhomme@asci.fr>
0       belong          0xfffb          audio/x-mp3
0       string          ID3             audio/x-mp3

# OGG files
# Detects Ogg Vorbis compressed audio files.
# Needs to be adapted to only detect Vorbis files, not all Ogg files,
# but whether this is possible, I don't know.
0       string          OggS            audio/x-ogg

#------------------------------------------------------------------------------
# KSysV stuff: logfiles and packages belonging to KSysV
#

# KSysV logfiles
0	string		KDE\ System\ V\ Init\ Editor	text/x-ksysv-log

# KSysV init packages
4	string	KSysV
>15	byte	>0x01	application/x-ksysv-package

#------------------------------------------------------------------------------
# c-lang:  file(1) magic for C programs or various scripts
#

# XPM icons (Greg Roelofs, newt@uchicago.edu)
# ideally should go into "images", but entries below would tag XPM as C source
0	string		/*\ XPM		image/x-xpm

# this first will upset you if you're a PL/1 shop... (are there any left?)
# in which case rm it; ascmagic will catch real C programs
#					C or REXX program text
#0	string		/*		text/x-c
#					C++ program text
#0	string		//		text/x-c++

#------------------------------------------------------------------------------
# commands:  file(1) magic for various shells and interpreters
#
#0       string          :\ shell archive or commands for antique kernel text
0       string          #!/bin/sh               application/x-shellscript
0       string          #!\ /bin/sh             application/x-shellscript
0       string          #!/bin/csh              application/x-shellscript
0       string          #!\ /bin/csh            application/x-shellscript
# korn shell magic, sent by George Wu, gwu@clyde.att.com
0       string          #!/bin/ksh              application/x-shellscript
0       string          #!\ /bin/ksh            application/x-shellscript
0       string          #!/bin/zsh              application/x-shellscript
0       string          #!\ /bin/zsh            application/x-shellscript
0       string          #!/bin/tcsh             application/x-shellscript
0       string          #!\ /bin/tcsh           application/x-shellscript
0       string          #!/usr/local/tcsh       application/x-shellscript
0       string          #!\ /usr/local/tcsh     application/x-shellscript
0       string          #!/usr/local/bin/tcsh   application/x-shellscript
0       string          #!\ /usr/local/bin/tcsh application/x-shellscript
# bash shell magic, from Peter Tobias (tobias@server.et-inf.fho-emden.de)
0       string          #!/bin/bash     		application/x-shellscript
0       string          #!\ /bin/bash           application/x-shellscript
0       string          #!/usr/local/bin/bash   application/x-shellscript
0       string          #!\ /usr/local/bin/bash application/x-shellscript

#
# zsh/ash/ae/nawk/gawk magic from cameron@cs.unsw.oz.au (Cameron Simpson)
0       string          #!/usr/local/bin/zsh    application/x-shellscript
0       string          #!\ /usr/local/bin/zsh  application/x-shellscript
0       string          #!/usr/local/bin/ash    application/x-shellscript
0       string          #!\ /usr/local/bin/ash  application/x-shellscript
#0       string          #!/usr/local/bin/ae     Neil Brown's ae
#0       string          #!\ /usr/local/bin/ae   Neil Brown's ae
0       string          #!/bin/nawk             application/x-nawk
0       string          #!\ /bin/nawk           application/x-nawk
0       string          #!/usr/bin/nawk         application/x-nawk
0       string          #!\ /usr/bin/nawk       application/x-nawk
0       string          #!/usr/local/bin/nawk   application/x-nawk
0       string          #!\ /usr/local/bin/nawk application/x-nawk
0       string          #!/bin/gawk             application/x-gawk
0       string          #!\ /bin/gawk           application/x-gawk
0       string          #!/usr/bin/gawk         application/x-gawk
0       string          #!\ /usr/bin/gawk       application/x-gawk
0       string          #!/usr/local/bin/gawk   application/x-gawk
0       string          #!\ /usr/local/bin/gawk application/x-gawk
#
0       string          #!/bin/awk              application/x-awk
0       string          #!\ /bin/awk            application/x-awk
0       string          #!/usr/bin/awk          application/x-awk
0       string          #!\ /usr/bin/awk        application/x-awk
#0       string          BEGIN                   application/x-awk

# For Larry Wall's perl language.  The ``eval'' line recognizes an
# outrageously clever hack for USG systems.
#                               Keith Waclena <keith@cerberus.uchicago.edu>
0       string          #!/bin/perl                     application/x-perl
0       string          #!\ /bin/perl                   application/x-perl
0       string          eval\ "exec\ /bin/perl          application/x-perl
0       string          #!/usr/bin/perl                 application/x-perl
0       string          #!\ /usr/bin/perl               application/x-perl
0       string          eval\ "exec\ /usr/bin/perl      application/x-perl
0       string          #!/usr/local/bin/perl           application/x-perl
0       string          #!\ /usr/local/bin/perl         application/x-perl
0       string          eval\ "exec\ /usr/local/bin/perl application/x-perl

# python.
#
0       string          #!/bin/python                     application/x-python
0       string          #!\ /bin/python                   application/x-python
0       string          eval\ "exec\ /bin/python          application/x-python
0       string          #!/usr/bin/python                 application/x-python
0       string          #!\ /usr/bin/python               application/x-python
0       string          eval\ "exec\ /usr/bin/python      application/x-python
0       string          #!/usr/local/bin/python           application/x-python
0       string          #!\ /usr/local/bin/python         application/x-python
0       string          eval\ "exec\ /usr/local/bin/python application/x-python
0	belong		0x994e0d0a		application/x-python-bytecode

#------------------------------------------------------------------------------
# compress:  file(1) magic for pure-compression formats (no archives)
#
# compress, gzip, pack, compact, huf, squeeze, crunch, freeze, yabba, whap, etc.
#
# Formats for various forms of compressed data
# Formats for "compress" proper have been moved into "compress.c",
# because it tries to uncompress it to figure out what's inside.

# standard unix compress
0	string		\037\235	application/x-compress

# gzip (GNU zip, not to be confused with [Info-ZIP/PKWARE] zip archiver)
0       string          \037\213	application/x-gzip

# KOffice documents (gzipped, with an idenfication string in the 'orig filename' header)
>10	string		KOffice
>>18	string		application/x-kchart\004\006	application/x-kchart
>>18	string		application/x-kformula\004\006	application/x-kformula
>>18	string		application/x-killustrator\004\006	application/x-killustrator
>>18	string		application/x-kontour\004\006	application/x-kontour
>>18	string		application/x-kpresenter\004\006	application/x-kpresenter
>>18	string		application/x-kspread\004\006	application/x-kspread
>>18	string		application/x-kword\004\006	application/x-kword
>>18	string		application/x-krayon\004\006	application/x-krayon
>>18	string		application/x-kivio\004\006	application/x-kivio

# BZIP2
0	string          BZh             application/x-bzip2

# PKZIP
0		string			PK\003\004		application/x-zip

# Zoo archiver
# DF: the continuation lines are a bit useless, since the mimetype is
# already set at the top level -> commenting out.
20	lelong		0xfdc4a7dc	application/x-zoo
#>4	byte		>48		application/x-zoo
#>>6	byte		>47		application/x-zoo
#>>>7	byte		>47		application/x-zoo
#>32	byte		>0		application/x-zoo
#>>33	byte		x		application/x-zoo
#>42	lelong		0xfdc4a7dc	application/x-zoo
#>>70	byte		>0		application/x-zoo
#>>>71	byte		x		application/x-zoo

# According to gzip.h, this is the correct byte order for packed data.
0	string		\037\036	application/octet-stream
#
# This magic number is byte-order-independent.
#
0	short		017437		application/octet-stream

# XXX - why *two* entries for "compacted data", one of which is
# byte-order independent, and one of which is byte-order dependent?
#
# compacted data
0	short		0x1fff		application/octet-stream
0	string		\377\037	application/octet-stream
# huf output
0	short		0145405		application/octet-stream

# Squeeze and Crunch...
# These numbers were gleaned from the Unix versions of the programs to
# handle these formats.  Note that I can only uncrunch, not crunch, and
# I didn't have a crunched file handy, so the crunch number is untested.
#				Keith Waclena <keith@cerberus.uchicago.edu>
#0	leshort		0x76FF		squeezed data (CP/M, DOS)
#0	leshort		0x76FE		crunched data (CP/M, DOS)

# Freeze
#0	string		\037\237	Frozen file 2.1
#0	string		\037\236	Frozen file 1.0 (or gzip 0.5)

# lzh?
#0	string		\037\240	LZH compressed data

#POSIX tar file
257	string		ustar\0		application/x-tar
#GNU tar file
257	string		ustar\040\040\0		application/x-tar

0	short		070707		application/x-cpio
0       string          070701          application/x-cpio
0       string          070702          application/x-cpio
#swapped
0	short		0143561		application/x-cpio

0	string		=<ar>		application/x-archive
0	string		!<arch>		application/x-archive
>8	string		debian		application/x-debian-package

#------------------------------------------------------------------------------
#
# RPM: file(1) magic for Red Hat Packages   Erik Troan (ewt@redhat.com)
#
0       beshort         0xedab
>2      beshort         0xeedb          application/x-rpm

# lzw
0	lelong&0x8080ffff	0x0000081a	application/x-arc
# squashed
0	lelong&0x8080ffff	0x0000091a	application/x-arc
# uncompressed
0	lelong&0x8080ffff	0x0000021a	application/x-arc
# packed
0	lelong&0x8080ffff	0x0000031a	application/x-arc
# squeezed
0	lelong&0x8080ffff	0x0000041a	application/x-arc
# crunched
0	lelong&0x8080ffff	0x0000061a	application/x-arc

0	leshort	0xea60	application/octet-stream	x-arj

# LHARC/LHA archiver (Greg Roelofs, newt@uchicago.edu)
2	string	-lh0-	application/x-lharc
2	string	-lh1-	application/x-lharc
2	string	-lz4-	application/x-lharc
2	string	-lz5-	application/x-lharc
#	[never seen any but the last; -lh4- reported in comp.compression:]
2	string	-lzs-	application/x-lha
2	string	-lh\ -	application/x-lha
2	string	-lhd-	application/x-lha
2	string	-lh2-	application/x-lha
2	string	-lh3-	application/x-lha
2	string	-lh4-	application/x-lha
2	string	-lh5-	application/x-lha
# Shell archives
10	string	#\ This\ is\ a\ shell\ archive	application/x-shellscript

# RAR archiver (Greg Roelofs, newt@uchicago.edu)
0	string		Rar!		application/x-rar

#------------------------------------------------------------------------------
# frame:  file(1) magic for FrameMaker files
#
# This stuff came on a FrameMaker demo tape, most of which is
# copyright, but this file is "published" as witness the following:
#
0	string		\<MakerFile	application/x-frame
0	string		\<MIFFile	application/x-frame
0	string		\<MakerDictionary	application/x-frame
0	string		\<MakerScreenFon	application/x-frame
0	string		\<MML		application/x-frame
0	string		\<Book		application/x-frame
0	string		\<Maker		application/x-frame

#------------------------------------------------------------------------------
# html:  file(1) magic for HTML (HyperText Markup Language) docs
#
# from Daniel Quinlan <quinlan@yggdrasil.com>
#
0	string		\<HEAD	text/html
0	string		\<head	text/html
0	string		\<TITLE	text/html
0	string		\<title	text/html
0       string          \<html	text/html
0       string          \<HTML	text/html
0	string		\<!--	text/html
0	string		\<h1	text/html
0	string		\<H1	text/html
0	string		\<!doctype\ HTML	text/html
0	string		\<!DOCTYPE\ HTML	text/html
0	string		\<!doctype\ html	text/html
0	string		\<!DOCTYPE\ html	text/html

# Extensible markup language (XML), a subset of SGML
# from Marc Prud'hommeaux (marc@apocalypse.org)
0       string          \<?xml          text/xml
0       string          \<?XML          text/xml
0       string          \<?Xml          text/xml



#-----------------------------------------------------------------------------
# troff stuff
#
0       string          .\\"            application/x-troff
0       string          '\\"            application/x-troff
0       string          '.\\"           application/x-troff
0       string          \\"             application/x-troff

#------------------------------------------------------------------------------
# images:  file(1) magic for image formats (see also "c-lang" for XPM bitmaps)
#
# originally from jef@helios.ee.lbl.gov (Jef Poskanzer),
# additions by janl@ifi.uio.no as well as others. Jan also suggested
# merging several one- and two-line files into here.
#
# XXX - byte order for GIF and TIFF fields?
# [GRR:  TIFF allows both byte orders; GIF is probably little-endian]
#

# [GRR:  what the hell is this doing in here?]
#0	string		xbtoa		btoa'd file

# PBMPLUS
#					PBM file
0	string		P1		image/x-portable-bitmap
#					PGM file
0	string		P2		image/x-portable-greymap
#					PPM file
0	string		P3		image/x-portable-pixmap
#					PBM "rawbits" file
0	string		P4		image/x-portable-bitmap
#					PGM "rawbits" file
0	string		P5		image/x-portable-greymap
#					PPM "rawbits" file
0	string		P6		image/x-portable-pixmap

# NIFF (Navy Interchange File Format, a modification of TIFF)
# [GRR:  this *must* go before TIFF]
0	string		IIN1		image/x-niff

# TIFF and friends
#					TIFF file, big-endian
0	string		MM		image/tiff
#					TIFF file, little-endian
0	string		II		image/tiff

# possible GIF replacements; none yet released!
# (Greg Roelofs, newt@uchicago.edu)
#
# GRR 950115:  this was mine ("Zip GIF"):
#					ZIF image (GIF+deflate alpha)
0	string		GIF94z		image/unknown
#
# GRR 950115:  this is Jeremy Wohl's Free Graphics Format (better):
#					FGF image (GIF+deflate beta)
0	string		FGF95a		image/unknown
#
# GRR 950115:  this is Thomas Boutell's Portable Bitmap Format proposal
# (best; not yet implemented):
#					PBF image (deflate compression)
0	string		PBF		image/unknown

# GIF
0	string		GIF		image/gif

# JPEG images
0	beshort		0xffd8		image/jpeg

# PNG images
0       string          \x89PNG         image/png

# PC bitmaps (OS/2, Windoze BMP files)  (Greg Roelofs, newt@uchicago.edu)
0	string		BM
#(OS/2 1.x format)
>14	byte		12		image/x-bmp
#(OS/2 2.x format)
>14	byte		64		image/x-bmp
# (Windows 3.x format)
>14	byte		40		image/x-bmp

#0	string		IC		icon
#0	string		PI		pointer
#0	string		CI		color icon
#0	string		CP		color pointer
#0	string		BA		bitmap array


#------------------------------------------------------------------------------
# lisp:  file(1) magic for lisp programs
#
# various lisp types, from Daniel Quinlan (quinlan@yggdrasil.com)
#0	string	;;			text/plain
# Emacs 18 - this is always correct, but not very magical.
0	string	\012(			application/x-elc
# Emacs 19
0	string	;ELC\023\000\000\000	application/x-elc

#------------------------------------------------------------------------------
# mail.news:  file(1) magic for mail and news
#
# There are tests to ascmagic.c to cope with mail and news.
0	string		Relay-Version: 	message/rfc822
0	string		#!\ rnews	message/rfc822
0	string		N#!\ rnews	message/rfc822
0	string		Forward\ to 	message/rfc822
0	string		Pipe\ to 	message/rfc822
0	string		Return-Path:	message/rfc822
0	string		Path:		message/news
0	string		Xref:		message/news
0	string		From:		message/rfc822
0	string		Article 	message/news
#------------------------------------------------------------------------------
# msword: file(1) magic for MS Word files
#
# Contributor claims:
# Reversed-engineered MS Word magic numbers
# Except that they are generic MSOffice magic numbers ! (DF)

0	string		\376\067\0\043			application/msword
0	string		\320\317\021\340\241\261	application/msword
0	string		\333\245-\0\0\0			application/msword
2080    string		Microsoft\ Word\ 6.0\ Document  application/msword
2112    string          Microsoft Word document data    application/msword

# excel
2080    string  Microsoft\ Excel\ 5.0\ Worksheet	application/msexcel

#------------------------------------------------------------------------------
# word perfect

0	belong		0xff575053c405			application/wordperfect
1       string		WPC				application/wordperfect

#------------------------------------------------------------------------------
# printer:  file(1) magic for printer-formatted files
#

# PostScript
0	string		%!		application/postscript
0	string		\004%!		application/postscript

# Acrobat
# (due to clamen@cs.cmu.edu)
0	string		%PDF-		application/pdf

#------------------------------------------------------------------------------
# sc:  file(1) magic for "sc" spreadsheet
#
38	string		Spreadsheet	application/x-sc

#------------------------------------------------------------------------------
# tex:  file(1) magic for TeX files
#
# XXX - needs byte-endian stuff (big-endian and little-endian DVI?)
#
# From <conklin@talisman.kaleida.com>

# Although we may know the offset of certain text fields in TeX DVI
# and font files, we can't use them reliably because they are not
# zero terminated. [but we do anyway, christos]
0	string		\367\002	application/x-dvi
#0	string		\367\203	TeX generic font data
#0	string		\367\131	TeX packed font data
#0	string		\367\312	TeX virtual font data
# Maybe we should have a mimetype like x-tex-log, but in any case
# text/plain is better than nothing. (David Faure)
0	string		This\ is\ TeX,	text/plain
0	string		This\ is\ METAFONT,	text/plain

# There is no way to detect TeX Font Metric (*.tfm) files without
# breaking them apart and reading the data.  The following patterns
# match most *.tfm files generated by METAFONT or afm2tfm.
2	string		\000\021	application/x-tex-tfm
2	string		\000\022	application/x-tex-tfm

# Texinfo and GNU Info, from Daniel Quinlan (quinlan@yggdrasil.com)
#0	string		\\input\ texinfo	Texinfo source text
#0	string		This\ is\ Info\ file	GNU Info text

# correct TeX magic for Linux (and maybe more)
# from Peter Tobias (tobias@server.et-inf.fho-emden.de)
#
0	leshort		0x02f7		application/x-dvi

# RTF - Rich Text Format
0	string		{\\rtf		text/rtf

#------------------------------------------------------------------------------
# animation:  file(1) magic for animation/movie formats
#
# animation formats, originally from vax@ccwf.cc.utexas.edu (VaX#n8)
#						MPEG file
0       belong          0x000001b3              video/mpeg
0       belong          0x000001ba              video/mpeg
0       beshort&0xfff0  0xfff0                  audio/mpeg

# FLI animation format
0	leshort		0xAF11				video/fli
# FLC animation format
0	leshort		0xAF12				video/flc
#
# SGI and Apple formats
#
0	string		MOVI				video/sgi
4	string		moov				video/quicktime
4	string		mdat				video/quicktime
# The contributor claims:
#   I couldn't find a real magic number for these, however, this
#   -appears- to work.  Note that it might catch other files, too,
#   so BE CAREFUL!
#
# Note that title and author appear in the two 20-byte chunks
# at decimal offsets 2 and 22, respectively, but they are XOR'ed with
# 255 (hex FF)! DL format SUCKS BIG ROCKS.
#
#						DL file version 1 , medium format (160x100, 4 images/screen)
#0	byte		1			video/unknown
#0	byte		2			video/unknown
#
# Databases
#
# GDBM magic numbers
#  Will be maintained as part of the GDBM distribution in the future.
#  <downsj@teeny.org>
0       belong  0x13579ace      application/x-gdbm
0       lelong  0x13579ace      application/x-gdbm
0       string  GDBM            application/x-gdbm
#
0       belong  0x061561        application/x-dbm
#
# Executables
#
0       string          \177ELF 
>4      byte            0
>4      byte            1
>4      byte            2
>5      byte            0
>5      byte            1
>>16    leshort         0
>>16    leshort         1               application/x-object
>>16    leshort         2               application/x-executable
>>16    leshort         3               application/x-sharedlib
>>16    leshort         4               application/x-coredump
>5      byte            2
>>16    beshort         0
>>16    beshort         1               application/x-object
>>16    beshort         2               application/x-executable
>>16    beshort         3               application/x-sharedlib
>>16    beshort         4               application/x-coredump
#
# DOS
0	string		MZ		application/x-executable
#
# KDE desktop file
0		string  [Desktop\ Entry]        application/x-desktop
0		string  [Desktop\ Action        application/x-desktop
0		string	[KDE\ Desktop\ Entry]	application/x-desktop
0               string  \#\ Config\ File        application/x-desktop
0		string	\#\ KDE\ Config\ File	application/x-desktop
# xmcd database file for kscd
0		string	\#\ xmcd                text/xmcd

#------------------------------------------------------------------------------
# Java

0	short		0xcafe
>2	short		0xbabe		application/java

# news and mail
0       string          Return-Path:    message/rfc822
0       string          Path:           message/news
0       string          Xref:           message/news
0       string          From:           message/rfc822
0       string          Article         message/news
0       string          BABYL           message/x-gnu-rmail
0       string          Received:       message/rfc822

# vcard / vcalendar
0	string		BEGIN:VCALENDAR	text/x-vcalendar
0	string		begin:vcalendar	text/x-vcalendar
0	string		BEGIN:VCARD	text/x-vcard
0	string		begin:vcard	text/x-vcard

# applix
#------------------------------------------------------------------------------
# applix:  file(1) magic for Applixware
# From: Peter Soos <sp@osb.hu>
#
0       string          *BEGIN
>7      string          WORDS           application/x-applixword
>7      string          GRAPHICS	application/x-applixgraphics
>7      string          RASTER          application/x-applix
>7      string          SPREADSHEETS    application/x-applixspread
>7      string          MACRO		application/x-applix
>7      string          BUILDER		application/x-applix

#------------------------------------------------------------------------------
# diff:  file(1) magic for diff(1) output
#
0       string          diff\		text/x-diff
0       string          ***\		text/x-diff
0       string          Only\ in\	text/x-diff
0       string          Common\ subdirectories:\        text/x-diff


#------------------------------------------------------------------------------
# flash:        file(1) magic for Macromedia Flash file format
#
# See
#
#       http://www.macromedia.com/software/flash/open/
#
0       string          FWS             application/x-shockwave-flash

#------------------------------------------------------------------------------
# KOffice:
#
#
0	belong		0x0d1a2701	application/x-kword-crypt
0	belong		0x0d1a2702	application/x-kspread-crypt


#------------------------------------------------------------------------------
# DjVu (Leon Bottou <leonb@research.att.com>):
#
4      string          FORM
>12    string          DJVU             image/x-djvu
>12    string          DJVM             image/x-djvu
>12    string          BM44             image/x-djvu
>12    string          PM44             image/x-djvu

