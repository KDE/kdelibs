#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=3

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

objdir = $(CURDIR)/obj-$(DEB_BUILD_GNU_TYPE)

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

ifeq ($(DEB_BUILD_GNU_TYPE),alpha-linux)
  export CFLAGS +=-O0 -mieee
  export CXXFLAGS +=-O0 -mieee
endif

ifeq ($(DEB_BUILD_GNU_TYPE),i386-linux)
  # Uncomment the following 2 lines to enable i686 optimziation
  # You may want to tweak the settings to your likings
  #export CFLAGS=-O3 -march=i686 -ffast-math -finline-functions
  #export CXXFLAGS=-O3 -march=i686 -ffast-math -finline-functions
  XINERAMA=--with-xinerama
endif

version=`head -1 debian/changelog | sed -e "s#.*(\([^)]*\)).*#Debian Package \1#"` ;

-include debian/debiandirs

debian/debiandirs: admin/debianrules
	perl -w admin/debianrules echodirs > debian/debiandirs

configure: configure-stamp
configure-stamp:
	dh_testdir

	# Apply Debian specific patches
	if test ! -f patch-stamp; then \
		for patch in $(CURDIR)/debian/patches/*.diff ;\
		do \
			echo APPLYING PATCH\: $${patch##*/};\
			patch -p1 < $$patch ;\
		done ;\
		touch patch-stamp ;\
	fi

	# KDE CVS does not have aclocal.m4 or configure
	if test ! -f configure; then \
		$(MAKE) -f admin/Makefile.common ;\
	fi

	# make build directory
	mkdir $(objdir)

	# run configure with build tree $(objdir)
	cd $(objdir) && \
	../configure $(configkde) --x-includes=/usr/X11R6/include \
	--with-distribution="$$version (`cat /etc/debian_version`)" \
	--enable-mitshm --with-alsa --with-ipv6-lookup=yes \
	--enable-fast-malloc=full $(XINERAMA)

	touch configure-stamp

build: build-stamp
build-stamp: configure-stamp 
	dh_testdir

	cd $(objdir) && \
	$(MAKE)

	# create documentation for kdelibs4
	echo Building API Documentation
	doxygen Doxyfile

	touch build-stamp

debian-clean:
	dh_testdir
	dh_testroot

	dh_clean

clean: debian-clean
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp \
		 debian/debiandirs debian/system.kdeglobals

	# Remove Debian specific patches
	if test -f patch-stamp; then \
		for patch in $(CURDIR)/debian/patches/*.diff ;\
		do \
			echo REMOVING PATCH\: $${patch##*/};\
			patch -p1 -R < $$patch ;\
		done ;\
		rm -f patch-stamp ;\
	fi

	# Remove build tree
	rm -rf $(objdir)

	# Remove api docs tree
	rm -rf apidocs

	# if Makefile exists run distclean
	if test -f Makefile; then \
		$(MAKE) distclean; \
	fi

	#if test -d CVS; then \
		$(MAKE) -f admin/Makefile.common cvs-clean ;\
	fi

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	cd $(objdir) && \
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp

	# install dh-make template and debianrules
	install -d debian/tmp/usr/share/doc/kdelibs4-dev/dh-make
	-install -m644 -p debian/dh-make/* \
		debian/tmp/usr/share/doc/kdelibs4-dev/dh-make
	install -p admin/debianrules \
		debian/tmp/usr/share/doc/kdelibs4-dev/dh-make

	# install kdelibs api docs
	install -d debian/tmp/usr/share/doc/kdelibs4-doc/html
	install -m644 -p apidocs/html/* \
		debian/tmp/usr/share/doc/kdelibs4-doc/html

	# create system.kdeglobals
	perl -w admin/debianrules echoglobals > debian/system.kdeglobals
	install -m644 -p debian/system.kdeglobals debian/tmp/$(kde_confdir)

	# make proxytype.pl and useragent.pl executable
	-chmod 755 debian/tmp/$(kde_datadir)/kconf_update/useragent.pl \
		debian/tmp/$(kde_datadir)/kconf_update/proxytype.pl

	# symlinks must be relative
	find debian/tmp -name common -type l \
		-exec echo REMOVING SYMLINK\: \{\} \; \
		-exec rm \{\} \;

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot
	dh_movefiles -i

	dh_installdocs -i
	dh_installpam -i
	dh_installchangelogs -i 
	dh_link -i
	dh_compress -i -X.docbook -X.css -X-license -X.dcl -X.bz2
	dh_fixperms -i
	dh_installdeb -i
	dh_perl -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_movefiles -a

	dh_installdocs -a
	dh_undocumented -a
	dh_installchangelogs -a
	dh_link -a
	dh_strip -a
	dh_compress -a -X.docbook -X.css -X-license -X.dcl -X.bz2
	dh_fixperms -a
	dh_makeshlibs -a
	dh_installdeb -a
	dh_perl -a
	dh_shlibdeps -a -ldebian/kdelibs4/usr/lib:debian/kdelibs4-bin/usr/lib
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
